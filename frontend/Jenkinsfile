pipeline {
    agent any

    environment {
        DOCKER_IMAGE_NAME = 'auction-system-frontend'
        GITHUB_REPO_URL = 'https://github.com/Ankur7470/real-time-auction-system.git'
        KUBECONFIG = '/var/lib/jenkins/.kube/config'
    }

    triggers {
        githubPush()
    }

    stages {

        stage('Checkout') {
            steps {
                git branch: 'main', url: "${GITHUB_REPO_URL}"
            }
        }

        stage('Detect Frontend Changes') {
            steps {
                script {
                    def changes = sh(
                        script: "git diff --name-only HEAD~1 HEAD | grep '^frontend/' || true",
                        returnStdout: true
                    ).trim()

                    if (changes == "") {
                        echo "No changes in frontend folder. Skipping the pipeline."
                        currentBuild.description = "No frontend changes"
                        currentBuild.result = 'NOT_BUILT'
                        return
                    } else {
                        echo "Changes detected in frontend folder. Proceeding with build."
                    }
                }
            }
        }

        stage('Build Frontend') {
            steps {
                dir('frontend') {
                    sh 'npm run build'
                }
            }
        }

        stage('Build Frontend Docker Image') {
            steps {
                dir('frontend') {
                    script {
                        docker.build("ankur2k19/${DOCKER_IMAGE_NAME}")
                        // docker.build("${DOCKER_IMAGE_NAME}", '.')
                    }
                }
            }
        }
//
        stage('Push Docker Image') {
            steps {
                script {
                    docker.withRegistry('', 'DockerHubCred') {
                        sh "docker push ankur2k19/${DOCKER_IMAGE_NAME}:latest"
                        // sh "docker tag $DOCKER_IMAGE_NAME ankur2k19/$DOCKER_IMAGE_NAME:latest"
                        // sh "docker push ankur2k19/$DOCKER_IMAGE_NAME"
                    }
                }
            }
        }

        stage('Deploy to K8s with Ansible Playbook') {
            steps {
                dir('frontend') {
                    ansiblePlaybook(
                        playbook: 'ansible_playbook.yml',
                        inventory: 'inventory'
                    )
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline completed successfully.'
        }
        failure {
            echo 'Pipeline failed.'
        }
        aborted {
            echo 'Pipeline was aborted.'
        }
        notBuilt {
            echo 'Pipeline skipped as there were no changes in the frontend.'
        }
        always {
            echo 'Pipeline finished execution.'
        }
    }
}
